#!/usr/bin/perl
use strict;
use File::Copy;
use File::Path;
use Getopt::Long;
use Cwd 'fast_abs_path';
use XML::Simple;
use Data::Dumper;


sub file_out {
    my ($fname, $contents) = @_;
    open ( FILE, ">$fname") or die "couldn't open $fname for writing";
    print FILE $contents;
    close (FILE);
}


my $GST_MAJOR_VERSION = "0";
my $GST_MINOR_VERSION = "10";
my $GST_VER_SUFFIX = "-" . $GST_MAJOR_VERSION . "." . $GST_MINOR_VERSION;
my $GST_LIB_PREFIX = "lib";


sub gname {
    my ($name) = @_;
    return "lib" . $name . "-2.0-0.dll";
}
sub lname {
    my ($name) = @_;
    return $GST_LIB_PREFIX . $name . $GST_VER_SUFFIX . ".dll";
}

my @glib_libs = ( gname("gobject"), gname("glib"), gname("gthread"), gname("gmodule"), "libxml2-2.dll", "iconv.dll", "z.dll" );
my @gst_base_libs = ( @glib_libs, lname("gstinterfaces"), lname("gstbase"), lname("gstcontroller"), lname("gstdataprotocol"), lname("gstnet"), lname("gstreamer"), lname("gstaudio") );

my $xml = XML::Simple->new(ForceArray => 1);
print Dumper( $xml->XMLin("gstbuildpars.xml") );



my $SRC_BIN_DIR = "C:/Users/Alberto/local/work/nela/gstreamer_win/trunk/Build/Windows/Win32/Release/bin/";
my $DST_BIN_DIR = "C:/gstreamer/bin/";
my $DST_PLUGIN_DIR = "C:/gstreamer/lib/gstreamer".$GST_VER_SUFFIX."/";


sub copy_files {
    my ($src_dir, $dst_dir, @file_list) = @_;

    $src_dir = $src_dir . '/';
    $dst_dir = $dst_dir . '/';

    mkpath $dst_dir;
    foreach my $name (@file_list) {
        my $src = $src_dir . $name;
        my $dst = $dst_dir . $name;


        print "$dst\n";
        copy($src, $dst) or die "couldn't copy file $src";
    }

}



my ($src_dir, $dst_dir) = ("","");
GetOptions('srcdir:s' => \$src_dir, 'dstdir:s' => \$dst_dir );
$src_dir = $SRC_BIN_DIR if $src_dir eq "";
$dst_dir = $DST_BIN_DIR if $dst_dir eq "";
$src_dir = fast_abs_path($src_dir);
$dst_dir = fast_abs_path($dst_dir);

print "src_dir: $src_dir\ndst_dir: $dst_dir\n";
copy_files( $src_dir, $dst_dir, @gst_base_libs );
